@model MvcPlants.Models.PlantFamilyViewModel

@{
    ViewData["Title"] = "Index";
}

<!DOCTYPE html>
<html>
<head>

    <title>MvcPlants</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <style>
        .wrapper{
            font-family: sans-serif;
            padding: 5vh 10vw;
            display: grid;
            align-items: center;
            background-color: antiquewhite;
            margin: 0;
            overflow-x: hidden;
        }

        p{
            margin-bottom:0 !important;
        }

        *{
            z-index: 10;
            user-select: none;
        }

        .table-grid{
            display: grid;
            justify-items: center;
        }

        table {
            background-color: floralwhite;
            border-radius: 1rem;
            padding: 3rem 3rem;
            border-collapse: collapse;
            text-align: center;
            padding-bottom: 2rem;
            margin-bottom: 3rem;
        }

        thead tr {
            font-weight: bold;
            height: 2rem;
            align-items: center;
            border-bottom: 1px solid lightgray;
        }

        tbody tr {
            border-bottom: 1px solid lightgray;
        }

        tbody tr:hover {
            background-color: oldlace;
        }

        tbody tr:hover > td {
            height: 4rem;
            transition-duration: .5s;
        }

        th, td {
            width: 10vw;
        }

        td {
            transition-duration: .5s;
            height: 3rem;
        }

        th {
            height: 2rem;
        }

        .tr-quick-fix {
            border-bottom: none !important;
        }

        .upper-grid {
            display: grid;
            grid-template-columns: auto auto;
            grid-template-rows: 40vh;
            align-items: center;
            margin-bottom: 8rem;
        }

        .cool-title h1 {
            font-size: 10rem;
            font-weight: 500;
            text-transform: uppercase;
            font-family: 'didot', serif;
        }

        .cool-title h1:before {
            background-color: crimson;
            border-radius: 0.25rem;
            content: '';
            display: block;
            height: 0.25rem;
            width: 20%;
            margin-bottom: 1.25rem;
        }

        .upper-grid > .first-img {
            clip-path: circle();
            object-fit: cover;
            height: 100%;
            width: 74%;
            grid-column: 2;
            background-color: antiquewhite;
            background-image: url('https://media.istockphoto.com/id/1489727923/photo/white-recycled-paper-texture.webp?b=1&s=170667a&w=0&k=20&c=7IJwAbH2EHQvOkMSbZMxkezsxkCYsmbUWYlLgyE1KiE=');
            background-blend-mode: multiply;
            justify-self: end;
            margin-right: 5rem;
        }


        .upper-grid > .second-img {
            object-fit: cover;
            height: 60%;
            grid-column: 2;
            /*background-color: antiquewhite;
                        background-image: url('https://media.istockphoto.com/id/1489727923/photo/white-recycled-paper-texture.webp?b=1&s=170667a&w=0&k=20&c=7IJwAbH2EHQvOkMSbZMxkezsxkCYsmbUWYlLgyE1KiE=');
                        background-blend-mode: multiply;*/
            justify-self: end;
            margin-right: 5rem;
            grid-column: 2;
            position: absolute;
            right: 13rem;
            rotate: 70deg;
            z-index: 15 !important;
        }

        .action-bar {
            display: grid;
            grid-template-columns: 9fr 1fr;
            padding: .5rem 1rem;
            background-color: floralwhite;
            margin-bottom: 2rem;
            border-radius: 1rem;
            align-items: center;
            border: 1px solid lightgray;
        }

        .search-bar {
            border-radius: 1rem;
            padding: .5rem;
            border: 1px solid lightgray;
            width: 40%;
            outline: none;
        }

        .search-bar:focus {
            border: 1px solid #0009;
            transition-duration: .2s;
        }

        .filter-search-bar{
            border-radius: 1rem;
            padding: .5rem;
            border: 1px solid lightgray;
            width: 20vw;
            outline: none;
        }

        .filter-search-bar:focus {
            border: 1px solid #0009;
            transition-duration: .2s;
        }

        .filter-search-button{
            width: fit-content;
            padding: .5rem;
            border-radius: 1rem;
            border: 1px solid lightgray;
        }

        .clear-filters{
            width: fit-content;
            padding: .5rem;
            border-radius: 1rem;
            border: 1px solid lightgray;
        }

        .searchFields{
            margin-bottom: 1rem;
            background-color: floralwhite;
            border-radius: 1rem;
            padding: .5rem 1rem;
            border: 1px solid lightgray;
        }

        .add {
            width: fit-content;
            height: fit-content;
            justify-self: end;
            margin-right: 1.5rem;
            align-items: center;
        }

        a{
            text-decoration: none;
            color: black;
        }
        a:hover{
            color: crimson;
        }

        .submit-button {
            width: fit-content;
            padding: .5rem;
            border-radius: 1rem;
            border: 1px solid lightgray;
        }

        .action-icon {
            margin-right: .5rem;
        }

        .filter-button{
            border:none;
            background: none;
        }

        .skewed {
            position: absolute;
            top: 0;
            bottom: 0;
            right: 0;
            left: 0;
            width: 100%;
            height: 60vh;
            background: whitesmoke;
            z-index: 0 !important;
            transform: skewY(-2deg);
            transform-origin: top left;
            box-shadow: 1rem -2rem 3rem 1rem #0009;
            background-image: url('https://media.istockphoto.com/id/1489727923/photo/white-recycled-paper-texture.webp?b=1&s=170667a&w=0&k=20&c=7IJwAbH2EHQvOkMSbZMxkezsxkCYsmbUWYlLgyE1KiE=');
        }

    </style>


</head>
<body>

    <div class="skewed"></div>

    <div class="wrapper">
    <div class="cool-title upper-grid">
        <h1>Index</h1>
        <img src="https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/122bbc70304973.5b9f91acd5484.png" draggable="false" class="first-img">

    </div>


    <div class="action-bar">

        <form asp-controller="Plants" asp-action="Index" method="get">
            <!--p>
                <select asp-for="PlantFamily" asp-items="Model.Families" class="filter-dropdown">
                    <option value="">All</option>
                </select>
                <input type="text" asp-for="SearchString" class="search-bar" />
                <input type="submit" value=" Search " class="submit-button" />
                </p>-->
            
            <button type="button" onclick="toggleFilters()" class="filter-button">
                <span class="material-symbols-outlined">
                    filter_list
                </span>
            </button>
            <button id="clearFiltersButton" type="button" style="display: none;" onclick="clearFilters()" class="clear-filters">Elimina Filtri</button>
            <input type="text" asp-for="SearchString" class="search-bar" placeholder="Search..." />
                <input type="submit" value=" Search " class="submit-button" />
        </form>

        <p class="add">
            <a asp-action="Create" style="height: fit-content; display: inline-block; margin-top: .4rem;"><span class="material-symbols-outlined">add</span></a>
        </p>

    </div>

    <div class="searchFields" style="display: none;">
            <input type="text" id="genusInput" placeholder="Genus" class="filter-search-bar">
            <input type="text" id="speciesInput" placeholder="Species" class="filter-search-bar">
        <input type="text" id="originInput" placeholder="Origin" class="filter-search-bar">
        <button onclick="searchPlants()" class="filter-search-button"> Search </button>
    </div>

    <div class="table-grid">
    <table>
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Plants![0].Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Plants![0].Family)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Plants![0].Genus)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Plants![0].Species)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Plants![0].Origin)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
@foreach (var item in Model.Plants!)
{
                <tr class="plant" data-family="@item.Family" data-genus="@item.Genus" data-species="@item.Species" data-origin="@item.Origin">
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Family)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Genus)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Species)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Origin)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="action-icon">
                            <span class="material-symbols-outlined">edit</span>
                        </a>

                        <a asp-action="Details" asp-route-id="@item.Id" class="action-icon">
                            <span class="material-symbols-outlined">info</span>
                        </a>

                        <a asp-action="Delete" asp-route-id="@item.Id" class="action-icon">
                            <span class="material-symbols-outlined">delete</span>
                        </a>
                    </td>
                </tr>
}
        </tbody>
    </table>
    </div>
    </div>

    <script>
        function toggleFilters() {
            var searchFields = document.getElementsByClassName("searchFields")[0];
            searchFields.style.display = searchFields.style.display === "none" ? "block" : "none";
            var submitButton = document.getElementsByClassName("submit-button")[0];
            submitButton.style.display = submitButton.style.display === "" ? "none" : "";
                }

        function checkFilters() {
            var genusInput = document.getElementById("genusInput").value.trim();
            var speciesInput = document.getElementById("speciesInput").value.trim();
            var originInput = document.getElementById("originInput").value.trim();
            return genusInput !== "" || speciesInput !== "" || originInput !== "";
        }

        function searchPlants() {
            var genusInput = document.getElementById("genusInput").value.trim().toLowerCase();
            var speciesInput = document.getElementById("speciesInput").value.trim().toLowerCase();
            var originInput = document.getElementById("originInput").value.trim().toLowerCase();
            var plants = document.getElementsByClassName("plant");

            for (var i = 0; i < plants.length; i++) {
                var plant = plants[i];
                var genus = plant.getAttribute("data-genus").toLowerCase();
                var species = plant.getAttribute("data-species").toLowerCase();
                var origin = plant.getAttribute("data-origin").toLowerCase();

                if ((genusInput === "" || genus.includes(genusInput)) &&
                    (speciesInput === "" || species.includes(speciesInput)) &&
                    (originInput === "" || origin.includes(originInput))) {
                    plant.style.display = "";
                } else {
                    plant.style.display = "none";
                }
            }

            var clearFiltersButton = document.getElementById("clearFiltersButton");
            if (checkFilters()) {
                clearFiltersButton.style.display = "inline-block";
            } else {
                clearFiltersButton.style.display = "none";
            }
        }

        function clearFilters() {
            document.getElementById("genusInput").value = "";
            document.getElementById("speciesInput").value = "";
            document.getElementById("originInput").value = "";
            searchPlants();
            document.getElementById("clearFiltersButton").style.display = "none";
        }
    </script>

</body>
</html>